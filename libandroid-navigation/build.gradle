apply plugin: 'com.android.library'

def config = rootProject.ext.ver
def library = rootProject.ext.library

android {
  compileSdkVersion config.compileSdkVersion

  defaultConfig {
    minSdkVersion config.minSdkVersion
    targetSdkVersion config.targetSdkVersion
    versionCode config.versionCode
    versionName config.versionName

//    buildConfigField('String',
//            "MAPBOX_NAVIGATION_SDK_IDENTIFIER", String.format("\"%s\"", "mapbox-navigation-android")
//    )
//    buildConfigField('String',
//            "MAPBOX_NAVIGATION_VERSION_NAME", String.format("\"%s\"", project.VERSION_NAME)
//    )
//    buildConfigField "String",
//            "MAPBOX_NAVIGATION_EVENTS_USER_AGENT", String.format("\"mapbox-navigation-android/%s\"",
//            project.VERSION_NAME
//    )
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

//  configurations {
//    javadocDeps
//  }
//
//  buildTypes {
//    debug {
//      testCoverageEnabled = true
//    }
//  }
//
//  testOptions {
//    unitTests.returnDefaultValues = true
//    unitTests.includeAndroidResources = true
//    unitTests.all {
//      jacoco {
//        includeNoLocationClasses = true
//      }
//    }
//  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked"
  options.compilerArgs << "-Xlint:deprecation"
}

dependencies {
  api library.mapboxSdkServices
  api library.mapboxSdkTurf
  api library.mapboxCore
  api (library.mapboxEvents) {
    exclude group: "com.mapbox.mapboxsdk", module: "mapbox-android-core"
  }

  // Navigator
  implementation library.mapboxNavigator

  // Support
  implementation library.supportV7

  // Logging
  implementation library.timber

  // AutoValues
  annotationProcessor library.autoValue
  compileOnly library.autoValue

  // Unit testing
  testImplementation library.junit
  testImplementation library.mockito
  testImplementation library.hamcrest
  testImplementation library.commonsIO
  testImplementation library.robolectric
}

//apply from: 'javadoc.gradle'
//apply from: "${rootDir}/gradle/mvn-push-android.gradle"
//apply from: "${rootDir}/gradle/checkstyle.gradle"
//apply from: "${rootDir}/gradle/jacoco.gradle"
//apply from: "${rootDir}/gradle/dependencies-graph.gradle"
//apply from: "${rootDir}/gradle/dependency-updates.gradle"